shadow$provide.module$node_modules$math_expression_evaluator$src$math_function=function(global,require,module,exports){var Mexp=function(parsed){this.value=parsed};Mexp.math={isDegree:!0,acos:function(x){return Mexp.math.isDegree?180/Math.PI*Math.acos(x):Math.acos(x)},add:function(a,b){return a+b},asin:function(x){return Mexp.math.isDegree?180/Math.PI*Math.asin(x):Math.asin(x)},atan:function(x){return Mexp.math.isDegree?180/Math.PI*Math.atan(x):Math.atan(x)},acosh:function(x){return Math.log(x+Math.sqrt(x*
x-1))},asinh:function(x){return Math.log(x+Math.sqrt(x*x+1))},atanh:function(x){return Math.log((1+x)/(1-x))},C:function(n,r){var pro=1,other=n-r,choice=r;choice<other&&(choice=other,other=r);for(r=choice+1;r<=n;r++)pro*=r;return pro/Mexp.math.fact(other)},changeSign:function(x){return-x},cos:function(x){Mexp.math.isDegree&&(x=Mexp.math.toRadian(x));return Math.cos(x)},cosh:function(x){return(Math.pow(Math.E,x)+Math.pow(Math.E,-1*x))/2},div:function(a,b){return a/b},fact:function(n){if(0!==n%1)return"NAN";
for(var pro=1,i=2;i<=n;i++)pro*=i;return pro},inverse:function(x){return 1/x},log:function(i){return Math.log(i)/Math.log(10)},mod:function(a,b){return a%b},mul:function(a,b){return a*b},P:function(n,r){var pro=1;for(r=Math.floor(n)-Math.floor(r)+1;r<=Math.floor(n);r++)pro*=r;return pro},Pi:function(low,high,ex){for(var pro=1;low<=high;low++)pro*=Number(ex.postfixEval({n:low}));return pro},pow10x:function(e){for(var x=1;e--;)x*=10;return x},sigma:function(low,high,ex){for(var sum=0;low<=high;low++)sum+=
Number(ex.postfixEval({n:low}));return sum},sin:function(x){Mexp.math.isDegree&&(x=Mexp.math.toRadian(x));return Math.sin(x)},sinh:function(x){return(Math.pow(Math.E,x)-Math.pow(Math.E,-1*x))/2},sub:function(a,b){return a-b},tan:function(x){Mexp.math.isDegree&&(x=Mexp.math.toRadian(x));return Math.tan(x)},tanh:function(x){return Mexp.sinha(x)/Mexp.cosha(x)},toRadian:function(x){return x*Math.PI/180}};Mexp.exception=function(message){this.message=message};module.exports=Mexp}
//# sourceMappingURL=module$node_modules$math_expression_evaluator$src$math_function.js.map
