shadow$provide.module$node_modules$recharts$lib$util$DOMUtils=function(global,require,module,exports){function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"===typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable})));ownKeys.forEach(function(key){var value=source[key];key in target?
Object.defineProperty(target,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):target[key]=value})}return target}function _toConsumableArray(arr){if(Array.isArray(arr)){var JSCompiler_temp=0;for(var arr2=Array(arr.length);JSCompiler_temp<arr.length;JSCompiler_temp++)arr2[JSCompiler_temp]=arr[JSCompiler_temp];JSCompiler_temp=arr2}else JSCompiler_temp=void 0;JSCompiler_temp||(JSCompiler_temp=Symbol.iterator in Object(arr)||"[object Arguments]"===Object.prototype.toString.call(arr)?Array.from(arr):
void 0);if(!(arr=JSCompiler_temp))throw new TypeError("Invalid attempt to spread non-iterable instance");return arr}function autoCompleteStyle(name,value){return 0<=STYLE_LIST.indexOf(name)&&value===+value?"".concat(value,"px"):value}function camelToMiddleLine(text){return text.split("").reduce(function(result,entry){return entry===entry.toUpperCase()?_toConsumableArray(result).concat(["-",entry.toLowerCase()]):_toConsumableArray(result).concat([entry])},[]).join("")}Object.defineProperty(exports,
"__esModule",{value:!0});exports.calculateChartCoordinate=exports.getOffset=exports.getStringSize=exports.getStyleString=void 0;var _ReactUtils=require("module$node_modules$recharts$lib$util$ReactUtils"),JSCompiler_object_inline_widthCache_1877={},JSCompiler_object_inline_cacheCount_1878=0,SPAN_STYLE={position:"absolute",top:"-20000px",left:0,padding:0,margin:0,border:"none",whiteSpace:"pre"},STYLE_LIST="minWidth maxWidth width minHeight maxHeight height top left fontSize lineHeight padding margin paddingLeft paddingRight paddingTop paddingBottom marginLeft marginRight marginTop marginBottom".split(" "),
getStyleString=function(style){return Object.keys(style).reduce(function(result,s){return"".concat(result).concat(camelToMiddleLine(s),":").concat(autoCompleteStyle(s,style[s]),";")},"")};exports.getStyleString=getStyleString;exports.getStringSize=function(text){var style=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};if(void 0===text||null===text||(0,_ReactUtils.isSsr)())return{width:0,height:0};var str="".concat(text),styleString=getStyleString(style);styleString="".concat(str,"-").concat(styleString);
if(JSCompiler_object_inline_widthCache_1877[styleString])return JSCompiler_object_inline_widthCache_1877[styleString];try{var measurementSpan=document.getElementById("recharts_measurement_span");measurementSpan||(measurementSpan=document.createElement("span"),measurementSpan.setAttribute("id","recharts_measurement_span"),document.body.appendChild(measurementSpan));var measurementSpanStyle=_objectSpread({},SPAN_STYLE,style);Object.keys(measurementSpanStyle).map(function(styleKey){measurementSpan.style[styleKey]=
measurementSpanStyle[styleKey];return styleKey});measurementSpan.textContent=str;var rect=measurementSpan.getBoundingClientRect(),result={width:rect.width,height:rect.height};JSCompiler_object_inline_widthCache_1877[styleString]=result;2E3<++JSCompiler_object_inline_cacheCount_1878&&(JSCompiler_object_inline_cacheCount_1878=0,JSCompiler_object_inline_widthCache_1877={});return result}catch(e){return{width:0,height:0}}};exports.getOffset=function(el){var html=el.ownerDocument.documentElement,box={top:0,
left:0};"undefined"!==typeof el.getBoundingClientRect&&(box=el.getBoundingClientRect());return{top:box.top+window.pageYOffset-html.clientTop,left:box.left+window.pageXOffset-html.clientLeft}};exports.calculateChartCoordinate=function(event,offset){return{chartX:Math.round(event.pageX-offset.left),chartY:Math.round(event.pageY-offset.top)}}}
//# sourceMappingURL=module$node_modules$recharts$lib$util$DOMUtils.js.map
