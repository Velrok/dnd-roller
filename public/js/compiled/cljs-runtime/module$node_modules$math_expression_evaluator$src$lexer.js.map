{
"version":3,
"file":"module$node_modules$math_expression_evaluator$src$lexer.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/math-expression-evaluator/src/lexer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$math_expression_evaluator$src$lexer\"] = function(global,require,module,exports) {\nvar Mexp=require('./math_function.js');\r\n\tfunction inc(arr,val){\r\n\t\tfor(var i=0;i<arr.length;i++)\r\n\t\t\tarr[i]+=val;\r\n\t\treturn arr;\r\n\t}\r\n\tvar token=['sin','cos','tan','pi','(',')','P','C',\r\n\t\t  'asin','acos','atan','7','8','9','int',\r\n\t\t  'cosh','acosh','ln','^','root','4','5','6','/','!',\r\n\t\t  'tanh','atanh','Mod','1','2','3','*',\r\n\t\t  'sinh','asinh','e','log','0','.','+','-',',','Sigma','n','Pi','pow'];\r\n\tvar show=['sin','cos','tan','&pi;','(',')','P','C',\r\n\t\t'asin','acos','atan','7','8','9','Int',\r\n\t\t'cosh','acosh',' ln','^','root','4','5','6','&divide;','!',\r\n\t\t'tanh','atanh',' Mod ','1','2','3','&times;',\r\n\t\t'sinh','asinh','e',' log','0','.','+','-',',','&Sigma;','n','&Pi;','pow'];\r\n\tvar eva=[Mexp.math.sin,Mexp.math.cos,Mexp.math.tan,'PI','(',')',Mexp.math.P,Mexp.math.C,\r\n\t\tMexp.math.asin,Mexp.math.acos,Mexp.math.atan,'7','8','9',Math.floor,\r\n\t\tMexp.math.cosh,Mexp.math.acosh,Math.log,Math.pow,Math.sqrt,'4','5','6',Mexp.math.div,Mexp.math.fact,\r\n\t\tMexp.math.tanh,Mexp.math.atanh,Mexp.math.mod,'1','2','3',Mexp.math.mul,\r\n\t\tMexp.math.sinh,Mexp.math.asinh,'E',Mexp.math.log,'0','.',Mexp.math.add,Mexp.math.sub,',',Mexp.math.sigma,'n',Mexp.math.Pi,Math.pow];\r\n\tvar preced={0:11,1:0,2:3,3:0,4:0,5:0,6:0,7:11,8:11,9:1,10:10,11:0,12:11,13:0};\r\n\tvar type=[0,0,0,3,4,5,10,10,\r\n\t\t0,0,0,1,1,1,0,\r\n\t\t0,0,0,10,0,1,1,1,2,7,\r\n\t\t0,0,2,1,1,1,2,\r\n\t\t0,0,3,0,1,6,9,9,11,12,13,12,8];\r\n\t /*\r\n\t0 : function with syntax function_name(Maths_exp)\r\n\t1 : numbers\r\n\t2 : binary operators like * / Mod left associate and same precedence\r\n\t3 : Math constant values like e,pi,Cruncher ans\r\n\t4 : opening bracket\r\n\t5 : closing bracket\r\n\t6 : decimal\r\n\t7 : function with syntax (Math_exp)function_name\r\n\t8: function with syntax function_name(Math_exp1,Math_exp2)\r\n\t9 : binary operator like +,-\r\n\t10: binary operator like P C or ^\r\n\t11: ,\r\n\t12: function with , seperated three parameters\r\n\t13: variable of Sigma function\r\n\t */\r\n\tvar type0={0:true,1:true,3:true,4:true,6:true,8:true,9:true,12:true,13:true},//type2:true,type4:true,type9:true,type11:true,type21:true,type22\r\n\ttype1={0:true,1:true,2:true,3:true,4:true,5:true,6:true,7:true,8:true,9:true,10:true,11:true,12:true,13:true},//type3:true,type5:true,type7:true,type23\r\n\ttype_1={0:true,3:true,4:true,8:true,12:true,13:true},\r\n\tempty={},\r\n\ttype_3={0:true,1:true,3:true,4:true,6:true,8:true,12:true,13:true},//type_5:true,type_7:true,type_23\r\n\ttype6={1:true},\r\n\tnewAr=[[],\r\n\t\t\t[\"1\",\"2\",\"3\",\"7\",\"8\",\"9\",\"4\",\"5\",\"6\",\"+\",\"-\",\"*\",\"/\",\"(\",\")\",\"^\",\"!\",\"P\",\"C\",\"e\",\"0\",\".\",\",\",\"n\"],\r\n\t\t\t[\"pi\",\"ln\",\"Pi\"],\r\n\t\t\t[\"sin\",\"cos\",\"tan\",\"Del\",\"int\",\"Mod\",\"log\",\"pow\"],\r\n\t\t\t[\"asin\",\"acos\",\"atan\",\"cosh\",\"root\",\"tanh\",\"sinh\"],\r\n\t\t\t[\"acosh\",\"atanh\",\"asinh\",\"Sigma\"]];\r\n\tfunction match(str1,str2,i,x){\r\n\t\tfor(var f=0;f<x;f++){\r\n\t\t\tif (str1[i+f]!==str2[f])\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tMexp.addToken=function(tokens){\r\n\t\tfor(i=0;i<tokens.length;i++){\r\n\t\t\tx=tokens[i].token.length;\r\n\t\t\tvar temp=-1;\r\n\r\n\t\t\t//newAr is a specially designed data structure in which 1D array at location one of 2d array has all string with length 1 2 with 2 and so on\r\n\r\n\t\t\tif (x<newAr.length)\t//match to check if token is really huge and not existing\r\n\t\t\t\t\t\t\t\t//if not checked it will break in next line as undefined index\r\n\t\t\t\tfor(y=0;y<newAr[x].length;y++){\r\n\t\t\t\t\tif (tokens[i].token===newAr[x][y]){\r\n\t\t\t\t\t\ttemp=token.indexOf(newAr[x][y]);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\tif (temp===-1) {\r\n\t\t\t\ttoken.push(tokens[i].token);\r\n\t\t\t\ttype.push(tokens[i].type);\r\n\t\t\t\tif(newAr.length<=tokens[i].token.length)\r\n\t\t\t\t\tnewAr[tokens[i].token.length]=[];\r\n\t\t\t\tnewAr[tokens[i].token.length].push(tokens[i].token);\r\n\t\t\t\teva.push(tokens[i].value);\r\n\t\t\t\tshow.push(tokens[i].show);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttoken[temp]=tokens[i].token;\r\n\t\t\t\ttype[temp]=tokens[i].type;\r\n\t\t\t\teva[temp]=tokens[i].value;\r\n\t\t\t\tshow[temp]=tokens[i].show;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tMexp.lex=function(inp,tokens){\r\n\t\t'use strict';\r\n\t\tvar str=[{type:4,value:\"(\",show:\"(\",pre:0}];\r\n\t\tvar ptc=[];\t//Parenthesis to close at the beginning is after one token\r\n\t\tvar inpStr=inp;\r\n\t\tvar key;\r\n        var pcounter=0;\r\n\t\tvar allowed=type0;\r\n\t\tvar bracToClose=0;\r\n\t\tvar asterick=empty;\r\n\t\tvar prevKey='';\r\n\t\tvar i,x,y;\r\n\t\tif(typeof tokens!==\"undefined\")\r\n\t\t\tMexp.addToken(tokens);\r\n\t\tvar obj={};\r\n\t\tfor(i=0;i<inpStr.length;i++){\r\n\t\t\tif (inpStr[i]==' ') {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tkey='';\r\n\t\t\tsec:for(x=(inpStr.length-i>(newAr.length-2)?newAr.length-1:inpStr.length-i);x>0;x--){\r\n\t\t\t\tfor(y=0;y<newAr[x].length;y++){\r\n\t\t\t\t\tif (match(inpStr,newAr[x][y],i,x)){\r\n\t\t\t\t\t\tkey=newAr[x][y];\r\n\t\t\t\t\t\tbreak sec;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ti+=key.length-1;\r\n\t\t\tif(key===''){\r\n\t\t\t\tthrow(new Mexp.exception(\"Can't understand after \"+inpStr.slice(i)));\r\n\t\t\t}\r\n\t\t\tvar index=token.indexOf(key);\r\n\t\t\tvar cToken=key;\r\n\t\t\tvar cType=type[index];\r\n\t\t\tvar cEv=eva[index];\r\n\t\t\tvar cPre=preced[cType];\r\n\t\t\tvar\tcShow=show[index];\r\n\t\t\tvar pre=str[str.length-1];\r\n\t\t\tfor(j=ptc.length;j--;){\t//loop over ptc\r\n\t\t\t\tif(ptc[j]===0){\r\n\t\t\t\t\tif([0,2,3,5,9,11,12,13].indexOf(cType)!==-1){\r\n\t\t\t\t\t\tif(allowed[cType]!==true){\r\n\t\t\t\t\t\t\tthrow(new Mexp.exception(key+\" is not allowed after \"+prevKey));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstr.push({value:\")\",type:5,pre:0,show:\")\"});\r\n\t\t\t\t\t\tallowed=type1;\r\n\t\t\t\t\t\tasterick=type_3;\r\n\t\t\t\t\t\tinc(ptc,-1).pop();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(allowed[cType]!==true){\r\n\t\t\t\tthrow(new Mexp.exception(key+\" is not allowed after \"+prevKey));\r\n\t\t\t}\r\n\t\t\tif(asterick[cType]===true){\r\n\t\t\t\tcType=2;\r\n\t\t\t\tcEv=Mexp.math.mul;\r\n\t\t\t\tcShow=\"&times;\";\r\n\t\t\t\tcPre=3;\r\n\t\t\t\ti=i-key.length;\r\n\t\t \t}\r\n\t\t\tobj={value:cEv,type:cType,pre:cPre,show:cShow};\r\n\t\t\tif(cType===0){\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tinc(ptc,2).push(2);\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t\tstr.push({value:\"(\",type:4,pre:0,show:\"(\"});\r\n\t\t\t}\r\n\t\t\telse if(cType===1){\r\n\t\t\t\tif(pre.type===1){\r\n\t\t\t\t\tpre.value+=cEv;\r\n\t\t\t\t\tinc(ptc,1);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tstr.push(obj);\r\n\t\t\t\t}\r\n\t\t\t\tallowed=type1;\r\n\t\t\t\tasterick=type_1;\r\n\t\t\t}\r\n\t\t\telse if(cType===2){\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tinc(ptc,2);\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\telse if(cType===3){//constant\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t\tallowed=type1;\r\n\t\t\t\tasterick=type_3;\r\n\t\t\t}\r\n\t\t\telse if(cType===4){\r\n                pcounter+=ptc.length;\r\n                ptc=[];\r\n\t\t\t\tbracToClose++;\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\telse if(cType===5){\r\n\t\t\t\tif(!bracToClose){\r\n\t\t\t\t\tthrow(new Mexp.exception(\"Closing parenthesis are more than opening one, wait What!!!\"));\r\n\t\t\t\t}\r\n                while(pcounter--){\t//loop over ptc\r\n    \t\t\t\t\t\tstr.push({value:\")\",type:5,pre:0,show:\")\"});\r\n    \t\t\t}\r\n                pcounter=0;\r\n\t\t\t\tbracToClose--;\r\n\t\t\t\tallowed=type1;\r\n\t\t\t\tasterick=type_3;\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\telse if(cType===6){\r\n\t\t\t\tif(pre.hasDec){\r\n\t\t\t\t\tthrow(new Mexp.exception(\"Two decimals are not allowed in one number\"));\r\n\t\t\t\t}\r\n\t\t\t\tif(pre.type!==1){\r\n\t\t\t\t\tpre={value:0,type:1,pre:0};\t//pre needs to be changed as it will the last value now to be safe in later code\r\n\t\t\t\t\tstr.push(pre);\r\n\t\t\t\t\tinc(ptc,-1);\r\n\t\t\t\t}\r\n\t\t\t\tallowed=type6;\r\n\t\t\t\tinc(ptc,1);\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tpre.value+=cEv;\r\n\t\t\t\tpre.hasDec=true;\r\n\t\t\t}\r\n\t\t\telse if(cType===7){\r\n\t\t\t\tallowed=type1;\r\n\t\t\t\tasterick=type_3;\r\n\t\t\t\tinc(ptc,1);\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\tif(cType===8){\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tinc(ptc,4).push(4);\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t\tstr.push({value:\"(\",type:4,pre:0,show:\"(\"});\r\n\t\t\t}\r\n\t\t\telse if(cType===9){\r\n\t\t\t\tif(pre.type===9){\r\n\t\t\t\t\tif(pre.value===Mexp.math.add){\r\n\t\t\t\t\t\tpre.value=cEv;\r\n\t\t\t\t\t\tpre.show=cShow;\r\n\t\t\t\t\t\tinc(ptc,1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(pre.value===Mexp.math.sub&&cShow==='-'){\r\n\t\t\t\t\t\tpre.value=Mexp.math.add;\r\n\t\t\t\t\t\tpre.show='+';\r\n\t\t\t\t\t\tinc(ptc,1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if(pre.type!==5&&pre.type!==7&&pre.type!==1&&pre.type!==3&&pre.type!==13){//changesign only when negative is found\r\n\t\t\t\t\tif(cToken==='-'){//do nothing for + token\r\n\t\t\t\t\t\t\t\t\t//don't add with the above if statement as that will run the else statement of parent if on Ctoken +\r\n\t\t\t\t\t\tallowed=type0;\r\n\t\t\t\t\t\tasterick=empty;\r\n\t\t\t\t\t\tinc(ptc,2).push(2);\r\n\t\t\t\t\t\tstr.push({value:Mexp.math.changeSign,type:0,pre:21,show:\"-\"});\r\n\t\t\t\t\t\tstr.push({value:\"(\",type:4,pre:0,show:\"(\"});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tstr.push(obj);\r\n\t\t\t\t\tinc(ptc,2);\r\n\t\t\t\t}\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t}\r\n\t\t\telse if(cType===10){\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tinc(ptc,2);\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\telse if(cType===11){\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\telse if(cType===12){\r\n\t\t\t\tallowed=type0;\r\n\t\t\t\tasterick=empty;\r\n\t\t\t\tinc(ptc,6).push(6);\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t\tstr.push({value:\"(\",type:4,pre:0});\r\n\t\t\t}\r\n\t\t\telse if(cType===13){\r\n\t\t\t\tallowed=type1;\r\n\t\t\t\tasterick=type_3;\r\n\t\t\t\tstr.push(obj);\r\n\t\t\t}\r\n\t\t\tinc(ptc,-1);\r\n\t\t\tprevKey=key;\r\n\t\t}\r\n\t\tfor(var j=ptc.length;j--;){\t//loop over ptc\r\n\t\t\tif(ptc[j]===0){\r\n\r\n\t\t\t\tstr.push({value:\")\",show:\")\",type:5,pre:3});\r\n\t\t\t\tinc(ptc,-1).pop();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (allowed[5]!==true) {\r\n\t\t\tthrow(new Mexp.exception(\"complete the expression\"));\r\n\t\t}\r\n\t\twhile(bracToClose--)\r\n\t\t\tstr.push({value:\")\",show:\")\",type:5,pre:3});\r\n\r\n\t\tstr.push({type:5,value:\")\",show:\")\",pre:0});\r\n//        console.log(str);\r\n\t\treturn new Mexp(str);\r\n\t};\r\n    module.exports=Mexp;\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","inc","arr","val","i","length","Mexp","token","show","eva","math","sin","cos","tan","P","C","asin","acos","atan","Math","floor","cosh","acosh","log","pow","sqrt","div","fact","tanh","atanh","mod","mul","sinh","asinh","add","sub","sigma","Pi","preced","type","type0","type1","type_1","empty","type_3","type6","newAr","addToken","Mexp.addToken","tokens","x","temp","y","indexOf","push","value","lex","Mexp.lex","inp","str","pre","ptc","pcounter","allowed","bracToClose","asterick","prevKey","key","f","str2","exception","slice","index","cToken","cType","cEv","cPre","cShow","j","pop","obj","hasDec","changeSign"]
}
