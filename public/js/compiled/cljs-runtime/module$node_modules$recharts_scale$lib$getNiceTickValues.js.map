{
"version":3,
"file":"module$node_modules$recharts_scale$lib$getNiceTickValues.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/recharts-scale/lib/getNiceTickValues.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$recharts_scale$lib$getNiceTickValues\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTickValuesFixedDomain = exports.getTickValues = exports.getNiceTickValues = void 0;\n\nvar _decimal = _interopRequireDefault(require(\"decimal.js-light\"));\n\nvar _utils = require(\"./util/utils\");\n\nvar _arithmetic = _interopRequireDefault(require(\"./util/arithmetic\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * Calculate a interval of a minimum value and a maximum value\n *\n * @param  {Number} min       The minimum value\n * @param  {Number} max       The maximum value\n * @return {Array} An interval\n */\nfunction getValidInterval(_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      min = _ref2[0],\n      max = _ref2[1];\n\n  var validMin = min,\n      validMax = max; // exchange\n\n  if (min > max) {\n    validMin = max;\n    validMax = min;\n  }\n\n  return [validMin, validMax];\n}\n/**\n * Calculate the step which is easy to understand between ticks, like 10, 20, 25\n *\n * @param  {Decimal} roughStep        The rough step calculated by deviding the\n * difference by the tickCount\n * @param  {Boolean} allowDecimals    Allow the ticks to be decimals or not\n * @param  {Integer} correctionFactor A correction factor\n * @return {Decimal} The step which is easy to understand between two ticks\n */\n\n\nfunction getFormatStep(roughStep, allowDecimals, correctionFactor) {\n  if (roughStep.lte(0)) {\n    return new _decimal.default(0);\n  }\n\n  var digitCount = _arithmetic.default.getDigitCount(roughStep.toNumber()); // The ratio between the rough step and the smallest number which has a bigger\n  // order of magnitudes than the rough step\n\n\n  var digitCountValue = new _decimal.default(10).pow(digitCount);\n  var stepRatio = roughStep.div(digitCountValue); // When an integer and a float multiplied, the accuracy of result may be wrong\n\n  var stepRatioScale = digitCount !== 1 ? 0.05 : 0.1;\n  var amendStepRatio = new _decimal.default(Math.ceil(stepRatio.div(stepRatioScale).toNumber())).add(correctionFactor).mul(stepRatioScale);\n  var formatStep = amendStepRatio.mul(digitCountValue);\n  return allowDecimals ? formatStep : new _decimal.default(Math.ceil(formatStep));\n}\n/**\n * calculate the ticks when the minimum value equals to the maximum value\n *\n * @param  {Number}  value         The minimum valuue which is also the maximum value\n * @param  {Integer} tickCount     The count of ticks\n * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not\n * @return {Array}                 ticks\n */\n\n\nfunction getTickOfSingleValue(value, tickCount, allowDecimals) {\n  var step = 1; // calculate the middle value of ticks\n\n  var middle = new _decimal.default(value);\n\n  if (!middle.isint() && allowDecimals) {\n    var absVal = Math.abs(value);\n\n    if (absVal < 1) {\n      // The step should be a float number when the difference is smaller than 1\n      step = new _decimal.default(10).pow(_arithmetic.default.getDigitCount(value) - 1);\n      middle = new _decimal.default(Math.floor(middle.div(step).toNumber())).mul(step);\n    } else if (absVal > 1) {\n      // Return the maximum integer which is smaller than 'value' when 'value' is greater than 1\n      middle = new _decimal.default(Math.floor(value));\n    }\n  } else if (value === 0) {\n    middle = new _decimal.default(Math.floor((tickCount - 1) / 2));\n  } else if (!allowDecimals) {\n    middle = new _decimal.default(Math.floor(value));\n  }\n\n  var middleIndex = Math.floor((tickCount - 1) / 2);\n  var fn = (0, _utils.compose)((0, _utils.map)(function (n) {\n    return middle.add(new _decimal.default(n - middleIndex).mul(step)).toNumber();\n  }), _utils.range);\n  return fn(0, tickCount);\n}\n/**\n * Calculate the step\n *\n * @param  {Number}  min              The minimum value of an interval\n * @param  {Number}  max              The maximum value of an interval\n * @param  {Integer} tickCount        The count of ticks\n * @param  {Boolean} allowDecimals    Allow the ticks to be decimals or not\n * @param  {Number}  correctionFactor A correction factor\n * @return {Object}  The step, minimum value of ticks, maximum value of ticks\n */\n\n\nfunction calculateStep(min, max, tickCount, allowDecimals) {\n  var correctionFactor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n\n  // dirty hack (for recharts' test)\n  if (!Number.isFinite((max - min) / (tickCount - 1))) {\n    return {\n      step: new _decimal.default(0),\n      tickMin: new _decimal.default(0),\n      tickMax: new _decimal.default(0)\n    };\n  } // The step which is easy to understand between two ticks\n\n\n  var step = getFormatStep(new _decimal.default(max).sub(min).div(tickCount - 1), allowDecimals, correctionFactor); // A medial value of ticks\n\n  var middle; // When 0 is inside the interval, 0 should be a tick\n\n  if (min <= 0 && max >= 0) {\n    middle = new _decimal.default(0);\n  } else {\n    // calculate the middle value\n    middle = new _decimal.default(min).add(max).div(2); // minus modulo value\n\n    middle = middle.sub(new _decimal.default(middle).mod(step));\n  }\n\n  var belowCount = Math.ceil(middle.sub(min).div(step).toNumber());\n  var upCount = Math.ceil(new _decimal.default(max).sub(middle).div(step).toNumber());\n  var scaleCount = belowCount + upCount + 1;\n\n  if (scaleCount > tickCount) {\n    // When more ticks need to cover the interval, step should be bigger.\n    return calculateStep(min, max, tickCount, allowDecimals, correctionFactor + 1);\n  }\n\n  if (scaleCount < tickCount) {\n    // When less ticks can cover the interval, we should add some additional ticks\n    upCount = max > 0 ? upCount + (tickCount - scaleCount) : upCount;\n    belowCount = max > 0 ? belowCount : belowCount + (tickCount - scaleCount);\n  }\n\n  return {\n    step: step,\n    tickMin: middle.sub(new _decimal.default(belowCount).mul(step)),\n    tickMax: middle.add(new _decimal.default(upCount).mul(step))\n  };\n}\n/**\n * Calculate the ticks of an interval, the count of ticks will be guraranteed\n *\n * @param  {Number}  min, max      min: The minimum value, max: The maximum value\n * @param  {Integer} tickCount     The count of ticks\n * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not\n * @return {Array}   ticks\n */\n\n\nfunction getNiceTickValuesFn(_ref3) {\n  var _ref4 = _slicedToArray(_ref3, 2),\n      min = _ref4[0],\n      max = _ref4[1];\n\n  var tickCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n  var allowDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  // More than two ticks should be return\n  var count = Math.max(tickCount, 2);\n\n  var _getValidInterval = getValidInterval([min, max]),\n      _getValidInterval2 = _slicedToArray(_getValidInterval, 2),\n      cormin = _getValidInterval2[0],\n      cormax = _getValidInterval2[1];\n\n  if (cormin === -Infinity || cormax === Infinity) {\n    var _values = cormax === Infinity ? [cormin].concat(_toConsumableArray((0, _utils.range)(0, tickCount - 1).map(function () {\n      return Infinity;\n    }))) : _toConsumableArray((0, _utils.range)(0, tickCount - 1).map(function () {\n      return -Infinity;\n    })).concat([cormax]);\n\n    return min > max ? (0, _utils.reverse)(_values) : _values;\n  }\n\n  if (cormin === cormax) {\n    return getTickOfSingleValue(cormin, tickCount, allowDecimals);\n  } // Get the step between two ticks\n\n\n  var _calculateStep = calculateStep(cormin, cormax, count, allowDecimals),\n      step = _calculateStep.step,\n      tickMin = _calculateStep.tickMin,\n      tickMax = _calculateStep.tickMax;\n\n  var values = _arithmetic.default.rangeStep(tickMin, tickMax.add(new _decimal.default(0.1).mul(step)), step);\n\n  return min > max ? (0, _utils.reverse)(values) : values;\n}\n/**\n * Calculate the ticks of an interval, the count of ticks won't be guraranteed\n *\n * @param  {Number}  min, max      min: The minimum value, max: The maximum value\n * @param  {Integer} tickCount     The count of ticks\n * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not\n * @return {Array}   ticks\n */\n\n\nfunction getTickValuesFn(_ref5) {\n  var _ref6 = _slicedToArray(_ref5, 2),\n      min = _ref6[0],\n      max = _ref6[1];\n\n  var tickCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n  var allowDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  // More than two ticks should be return\n  var count = Math.max(tickCount, 2);\n\n  var _getValidInterval3 = getValidInterval([min, max]),\n      _getValidInterval4 = _slicedToArray(_getValidInterval3, 2),\n      cormin = _getValidInterval4[0],\n      cormax = _getValidInterval4[1];\n\n  if (cormin === -Infinity || cormax === Infinity) {\n    return [min, max];\n  }\n\n  if (cormin === cormax) {\n    return getTickOfSingleValue(cormin, tickCount, allowDecimals);\n  }\n\n  var step = getFormatStep(new _decimal.default(cormax).sub(cormin).div(count - 1), allowDecimals, 0);\n  var fn = (0, _utils.compose)((0, _utils.map)(function (n) {\n    return new _decimal.default(cormin).add(new _decimal.default(n).mul(step)).toNumber();\n  }), _utils.range);\n  var values = fn(0, count).filter(function (entry) {\n    return entry >= cormin && entry <= cormax;\n  });\n  return min > max ? (0, _utils.reverse)(values) : values;\n}\n/**\n * Calculate the ticks of an interval, the count of ticks won't be guraranteed,\n * but the domain will be guaranteed\n *\n * @param  {Number}  min, max      min: The minimum value, max: The maximum value\n * @param  {Integer} tickCount     The count of ticks\n * @param  {Boolean} allowDecimals Allow the ticks to be decimals or not\n * @return {Array}   ticks\n */\n\n\nfunction getTickValuesFixedDomainFn(_ref7, tickCount) {\n  var _ref8 = _slicedToArray(_ref7, 2),\n      min = _ref8[0],\n      max = _ref8[1];\n\n  var allowDecimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  // More than two ticks should be return\n  var _getValidInterval5 = getValidInterval([min, max]),\n      _getValidInterval6 = _slicedToArray(_getValidInterval5, 2),\n      cormin = _getValidInterval6[0],\n      cormax = _getValidInterval6[1];\n\n  if (cormin === -Infinity || cormax === Infinity) {\n    return [min, max];\n  }\n\n  if (cormin === cormax) {\n    return [cormin];\n  }\n\n  var count = Math.max(tickCount, 2);\n  var step = getFormatStep(new _decimal.default(cormax).sub(cormin).div(count - 1), allowDecimals, 0);\n\n  var values = _toConsumableArray(_arithmetic.default.rangeStep(new _decimal.default(cormin), new _decimal.default(cormax).sub(new _decimal.default(0.99).mul(step)), step)).concat([cormax]);\n\n  return min > max ? (0, _utils.reverse)(values) : values;\n}\n\nvar getNiceTickValues = (0, _utils.memoize)(getNiceTickValuesFn);\nexports.getNiceTickValues = getNiceTickValues;\nvar getTickValues = (0, _utils.memoize)(getTickValuesFn);\nexports.getTickValues = getTickValues;\nvar getTickValuesFixedDomain = (0, _utils.memoize)(getTickValuesFixedDomainFn);\nexports.getTickValuesFixedDomain = getTickValuesFixedDomain;\n};"],
"names":["shadow$provide","global","require","module","exports","_interopRequireDefault","obj","__esModule","default","_toConsumableArray","arr","Array","isArray","i","arr2","length","Symbol","iterator","Object","iter","prototype","toString","call","from","TypeError","_slicedToArray","_arr","_n","_d","_e","undefined","_i","_s","done","next","push","value","err","getValidInterval","_ref","_ref2","min","max","validMin","validMax","getFormatStep","roughStep","allowDecimals","correctionFactor","lte","_decimal","digitCount","_arithmetic","getDigitCount","toNumber","digitCountValue","pow","stepRatio","div","stepRatioScale","formatStep","add","Math","ceil","mul","amendStepRatio","getTickOfSingleValue","tickCount","step","middle","isint","absVal","abs","floor","middleIndex","fn","_utils","compose","map","n","range","calculateStep","arguments","Number","isFinite","tickMin","tickMax","sub","mod","belowCount","upCount","scaleCount","defineProperty","getTickValuesFixedDomain","getTickValues","getNiceTickValues","memoize","getNiceTickValuesFn","_ref3","_ref4","count","_getValidInterval","_getValidInterval2","cormin","cormax","Infinity","_values","concat","reverse","_calculateStep","values","rangeStep","getTickValuesFn","_ref5","_ref6","_getValidInterval3","_getValidInterval4","filter","entry","getTickValuesFixedDomainFn","_ref7","_ref8","_getValidInterval5","_getValidInterval6"]
}
