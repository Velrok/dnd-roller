shadow$provide.module$node_modules$react_smooth$lib$easing=function(global,require,module,exports){function _toConsumableArray(arr){if(Array.isArray(arr)){var JSCompiler_temp=0;for(var arr2=Array(arr.length);JSCompiler_temp<arr.length;JSCompiler_temp++)arr2[JSCompiler_temp]=arr[JSCompiler_temp];JSCompiler_temp=arr2}else JSCompiler_temp=void 0;JSCompiler_temp||(JSCompiler_temp=Symbol.iterator in Object(arr)||"[object Arguments]"===Object.prototype.toString.call(arr)?Array.from(arr):void 0);if(!(arr=
JSCompiler_temp))throw new TypeError("Invalid attempt to spread non-iterable instance");return arr}Object.defineProperty(exports,"__esModule",{value:!0});exports.configEasing=exports.configSpring=exports.configBezier=void 0;var _util=require("module$node_modules$react_smooth$lib$util"),multyTime=function(params,t){return params.map(function(param,i){return param*Math.pow(t,i)}).reduce(function(pre,curr){return pre+curr})},cubicBezier=function(c1,c2){return function(t){return multyTime([0,3*c1,3*c2-
6*c1,3*c1-3*c2+1],t)}},derivativeCubicBezier=function(c1,c2){return function(t){var newParams=_toConsumableArray([0,3*c1,3*c2-6*c1,3*c1-3*c2+1].map(function(param,i){return param*i}).slice(1)).concat([0]);return multyTime(newParams,t)}},configBezier=function(){for(var _len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];_len=args[0];_key=args[1];var x2=args[2],y2=args[3];if(1===args.length)switch(args[0]){case "linear":_key=_len=0;y2=x2=1;break;case "ease":_len=
.25;_key=.1;x2=.25;y2=1;break;case "ease-in":_len=.42;_key=0;y2=x2=1;break;case "ease-out":_len=.42;_key=0;x2=.58;y2=1;break;case "ease-in-out":_key=_len=0;x2=.58;y2=1;break;default:(0,_util.warn)(!1,"[configBezier]: arguments should be one of oneOf 'linear', 'ease', 'ease-in', 'ease-out', 'ease-in-out', instead received %s",args)}(0,_util.warn)([_len,x2,_key,y2].every(function(num){return"number"===typeof num&&0<=num&&1>=num}),"[configBezier]: arguments should be x1, y1, x2, y2 of [0, 1] instead received %s",
args);var curveX=cubicBezier(_len,x2),curveY=cubicBezier(_key,y2),derCurveX=derivativeCubicBezier(_len,x2);args=function(_t){for(var x=_t=1<_t?1:_t,i=0;8>i;++i){var evalT=curveX(x)-_t,derVal=derCurveX(x);if(1E-4>Math.abs(evalT-_t)||1E-4>derVal)break;x-=evalT/derVal;x=1<x?1:0>x?0:x}return curveY(x)};args.isStepper=!1;return args};exports.configBezier=configBezier;var configSpring=function(){var config=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},_config$stiff=config.stiff,stiff=void 0===
_config$stiff?100:_config$stiff;_config$stiff=config.damping;var damping=void 0===_config$stiff?8:_config$stiff;config=config.dt;var dt=void 0===config?17:config;config=function(currX,destX,currV){var newV=currV+(-(currX-destX)*stiff-currV*damping)*dt/1E3;currX=currV*dt/1E3+currX;return 1E-4>Math.abs(currX-destX)&&1E-4>Math.abs(newV)?[destX,0]:[currX,newV]};config.isStepper=!0;config.dt=dt;return config};exports.configSpring=configSpring;exports.configEasing=function(){for(var _len2=arguments.length,
args=Array(_len2),_key2=0;_key2<_len2;_key2++)args[_key2]=arguments[_key2];_len2=args[0];if("string"===typeof _len2)switch(_len2){case "ease":case "ease-in-out":case "ease-out":case "ease-in":case "linear":return configBezier(_len2);case "spring":return configSpring();default:(0,_util.warn)(!1,"[configEasing]: first argument should be one of 'ease', 'ease-in', 'ease-out', 'ease-in-out', 'linear' and 'spring', instead  received %s",args)}if("function"===typeof _len2)return _len2;(0,_util.warn)(!1,
"[configEasing]: first argument type should be function or string, instead received %s",args);return null}}
//# sourceMappingURL=module$node_modules$react_smooth$lib$easing.js.map
