shadow$provide.module$node_modules$math_expression_evaluator$src$lexer=function(global,require,module,exports){function inc(arr,val){for(var i=0;i<arr.length;i++)arr[i]+=val;return arr}var Mexp=require("module$node_modules$math_expression_evaluator$src$math_function"),token="sin cos tan pi ( ) P C asin acos atan 7 8 9 int cosh acosh ln ^ root 4 5 6 / ! tanh atanh Mod 1 2 3 * sinh asinh e log 0 . + - , Sigma n Pi pow".split(" "),show="sin{cos{tan{\x26pi;{({){P{C{asin{acos{atan{7{8{9{Int{cosh{acosh{ ln{^{root{4{5{6{\x26divide;{!{tanh{atanh{ Mod {1{2{3{\x26times;{sinh{asinh{e{ log{0{.{+{-{,{\x26Sigma;{n{\x26Pi;{pow".split("{"),
eva=[Mexp.math.sin,Mexp.math.cos,Mexp.math.tan,"PI","(",")",Mexp.math.P,Mexp.math.C,Mexp.math.asin,Mexp.math.acos,Mexp.math.atan,"7","8","9",Math.floor,Mexp.math.cosh,Mexp.math.acosh,Math.log,Math.pow,Math.sqrt,"4","5","6",Mexp.math.div,Mexp.math.fact,Mexp.math.tanh,Mexp.math.atanh,Mexp.math.mod,"1","2","3",Mexp.math.mul,Mexp.math.sinh,Mexp.math.asinh,"E",Mexp.math.log,"0",".",Mexp.math.add,Mexp.math.sub,",",Mexp.math.sigma,"n",Mexp.math.Pi,Math.pow],preced={0:11,1:0,2:3,3:0,4:0,5:0,6:0,7:11,8:11,
9:1,10:10,11:0,12:11,13:0},type=[0,0,0,3,4,5,10,10,0,0,0,1,1,1,0,0,0,0,10,0,1,1,1,2,7,0,0,2,1,1,1,2,0,0,3,0,1,6,9,9,11,12,13,12,8],type0={0:!0,1:!0,3:!0,4:!0,6:!0,8:!0,9:!0,12:!0,13:!0},type1={0:!0,1:!0,2:!0,3:!0,4:!0,5:!0,6:!0,7:!0,8:!0,9:!0,10:!0,11:!0,12:!0,13:!0},type_1={0:!0,3:!0,4:!0,8:!0,12:!0,13:!0},empty={},type_3={0:!0,1:!0,3:!0,4:!0,6:!0,8:!0,12:!0,13:!0},type6={1:!0},newAr=[[],"123789456+-*/()^!PCe0.,n".split(""),["pi","ln","Pi"],"sin cos tan Del int Mod log pow".split(" "),"asin acos atan cosh root tanh sinh".split(" "),
["acosh","atanh","asinh","Sigma"]];Mexp.addToken=function(tokens){for(i=0;i<tokens.length;i++){x=tokens[i].token.length;var temp=-1;if(x<newAr.length)for(y=0;y<newAr[x].length;y++)if(tokens[i].token===newAr[x][y]){temp=token.indexOf(newAr[x][y]);break}-1===temp?(token.push(tokens[i].token),type.push(tokens[i].type),newAr.length<=tokens[i].token.length&&(newAr[tokens[i].token.length]=[]),newAr[tokens[i].token.length].push(tokens[i].token),eva.push(tokens[i].value),show.push(tokens[i].show)):(token[temp]=
tokens[i].token,type[temp]=tokens[i].type,eva[temp]=tokens[i].value,show[temp]=tokens[i].show)}};Mexp.lex=function(inp,tokens){var str=[{type:4,value:"(",show:"(",pre:0}],ptc=[],pcounter=0,allowed=type0,bracToClose=0,asterick=empty,prevKey="",i,y;"undefined"!==typeof tokens&&Mexp.addToken(tokens);for(i=0;i<inp.length;i++)if(" "!=inp[i]){tokens="";var x=inp.length-i>newAr.length-2?newAr.length-1:inp.length-i;a:for(;0<x;x--)for(y=0;y<newAr[x].length;y++){var JSCompiler_inline_result;b:{for(JSCompiler_inline_result=
0;JSCompiler_inline_result<x;JSCompiler_inline_result++)if(inp[i+JSCompiler_inline_result]!==newAr[x][y][JSCompiler_inline_result]){JSCompiler_inline_result=!1;break b}JSCompiler_inline_result=!0}if(JSCompiler_inline_result){tokens=newAr[x][y];break a}}i+=tokens.length-1;if(""===tokens)throw new Mexp.exception("Can't understand after "+inp.slice(i));var index=token.indexOf(tokens);x=tokens;y=type[index];JSCompiler_inline_result=eva[index];var cPre=preced[y];index=show[index];var pre=str[str.length-
1];for(j=ptc.length;j--;)if(0===ptc[j]&&-1!==[0,2,3,5,9,11,12,13].indexOf(y)){if(!0!==allowed[y])throw new Mexp.exception(tokens+" is not allowed after "+prevKey);str.push({value:")",type:5,pre:0,show:")"});allowed=type1;asterick=type_3;inc(ptc,-1).pop()}if(!0!==allowed[y])throw new Mexp.exception(tokens+" is not allowed after "+prevKey);!0===asterick[y]&&(y=2,JSCompiler_inline_result=Mexp.math.mul,index="\x26times;",cPre=3,i-=tokens.length);prevKey={value:JSCompiler_inline_result,type:y,pre:cPre,
show:index};if(0===y)allowed=type0,asterick=empty,inc(ptc,2).push(2),str.push(prevKey),str.push({value:"(",type:4,pre:0,show:"("});else if(1===y)1===pre.type?(pre.value+=JSCompiler_inline_result,inc(ptc,1)):str.push(prevKey),allowed=type1,asterick=type_1;else if(2===y)allowed=type0,asterick=empty,inc(ptc,2),str.push(prevKey);else if(3===y)str.push(prevKey),allowed=type1,asterick=type_3;else if(4===y)pcounter+=ptc.length,ptc=[],bracToClose++,allowed=type0,asterick=empty,str.push(prevKey);else if(5===
y){if(!bracToClose)throw new Mexp.exception("Closing parenthesis are more than opening one, wait What!!!");for(;pcounter--;)str.push({value:")",type:5,pre:0,show:")"});pcounter=0;bracToClose--;allowed=type1;asterick=type_3;str.push(prevKey)}else if(6===y){if(pre.hasDec)throw new Mexp.exception("Two decimals are not allowed in one number");1!==pre.type&&(pre={value:0,type:1,pre:0},str.push(pre),inc(ptc,-1));allowed=type6;inc(ptc,1);asterick=empty;pre.value+=JSCompiler_inline_result;pre.hasDec=!0}else 7===
y&&(allowed=type1,asterick=type_3,inc(ptc,1),str.push(prevKey));8===y?(allowed=type0,asterick=empty,inc(ptc,4).push(4),str.push(prevKey),str.push({value:"(",type:4,pre:0,show:"("})):9===y?(9===pre.type?pre.value===Mexp.math.add?(pre.value=JSCompiler_inline_result,pre.show=index,inc(ptc,1)):pre.value===Mexp.math.sub&&"-"===index&&(pre.value=Mexp.math.add,pre.show="+",inc(ptc,1)):5!==pre.type&&7!==pre.type&&1!==pre.type&&3!==pre.type&&13!==pre.type?"-"===x&&(inc(ptc,2).push(2),str.push({value:Mexp.math.changeSign,
type:0,pre:21,show:"-"}),str.push({value:"(",type:4,pre:0,show:"("})):(str.push(prevKey),inc(ptc,2)),allowed=type0,asterick=empty):10===y?(allowed=type0,asterick=empty,inc(ptc,2),str.push(prevKey)):11===y?(allowed=type0,asterick=empty,str.push(prevKey)):12===y?(allowed=type0,asterick=empty,inc(ptc,6).push(6),str.push(prevKey),str.push({value:"(",type:4,pre:0})):13===y&&(allowed=type1,asterick=type_3,str.push(prevKey));inc(ptc,-1);prevKey=tokens}for(var j=ptc.length;j--;)0===ptc[j]&&(str.push({value:")",
show:")",type:5,pre:3}),inc(ptc,-1).pop());if(!0!==allowed[5])throw new Mexp.exception("complete the expression");for(;bracToClose--;)str.push({value:")",show:")",type:5,pre:3});str.push({type:5,value:")",show:")",pre:0});return new Mexp(str)};module.exports=Mexp}
//# sourceMappingURL=module$node_modules$math_expression_evaluator$src$lexer.js.map
