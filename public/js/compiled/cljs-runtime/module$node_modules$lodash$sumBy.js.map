{
"version":3,
"file":"module$node_modules$lodash$sumBy.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,iCAAA,CAAqD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAAA,IACzFC,aAAeH,OAAA,CAAQ,0CAAR,CAD0E,CAEzFI,QAAUJ,OAAA,CAAQ,qCAAR,CA+BdC,OAAAC,QAAA,CANAG,QAAc,CAACC,KAAD,CAAQC,QAAR,CAAkB,CAC9B,MAAQD,MAAD,EAAUA,KAAAE,OAAV,CACHJ,OAAA,CAAQE,KAAR,CAAeH,YAAA,CAAaI,QAAb,CAAuB,CAAvB,CAAf,CADG,CAEH,CAH0B,CA3B6D;",
"sources":["node_modules/lodash/sumBy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$sumBy\"] = function(global,require,module,exports) {\nvar baseIteratee = require('./_baseIteratee'),\n    baseSum = require('./_baseSum');\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee, 2))\n    : 0;\n}\n\nmodule.exports = sumBy;\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseIteratee","baseSum","sumBy","array","iteratee","length"]
}
