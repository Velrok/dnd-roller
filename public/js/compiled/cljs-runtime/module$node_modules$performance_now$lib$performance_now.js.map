{
"version":3,
"file":"module$node_modules$performance_now$lib$performance_now.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACpH,IAAIC,QAAUH,OAAA,CAAQ,qCAAR,CAEb,UAAQ,EAAG,CAGV,GAA4B,WAA5B,GAAK,MAAOI,YAAZ,EAA2D,IAA3D,GAA2CA,WAA3C,EAAoEA,WAAAC,IAApE,CACEJ,MAAAC,QAAA,CAAiBI,QAAQ,EAAG,CAC1B,MAAOF,YAAAC,IAAA,EADmB,CAD9B,KAIO,IAAwB,WAAxB,GAAK,MAAOF,QAAZ,EAAmD,IAAnD,GAAuCA,OAAvC,EAA4DA,OAAAI,OAA5D,CAA4E,CACjFN,MAAAC,QAAA,CAAiBI,QAAQ,EAAG,CAC1B,OAAQE,cAAA,EAAR,CAA2BC,YAA3B,EAA2C,GADjB,CAG5B,KAAAF,OAASJ,OAAAI,OACT,KAAAC,eAAiBA,QAAQ,EAAG,CAE1B,IAAAE;AAAKH,MAAA,EACL,OAAe,IAAf,CAAOG,EAAA,CAAG,CAAH,CAAP,CAAqBA,EAAA,CAAG,CAAH,CAHK,CAK5B,KAAAC,eAAiBH,cAAA,EACjB,KAAAI,OAA4B,GAA5BA,CAAST,OAAAU,OAAA,EACT,KAAAJ,aAAeE,cAAfF,CAAgCG,MAZiD,CAA5E,IAaA,IAAIE,IAAAT,IAAJ,CAAc,CACnBJ,MAAAC,QAAA,CAAiBI,QAAQ,EAAG,CAC1B,MAAOQ,KAAAT,IAAA,EAAP,CAAoBU,QADM,CAG5B,KAAAA,SAAWD,IAAAT,IAAA,EAJQ,CAAd,IAMLJ,OAAAC,QAGA,CAHiBI,QAAQ,EAAG,CAC1B,MAAOU,CAAA,IAAIF,IAAJE,SAAA,EAAP,CAA8BD,QADJ,CAG5B,CAAAA,QAAA,CAAWC,CAAA,IAAIF,IAAJE,SAAA,EA7BH,CAAX,CAADC,KAAA,CAgCQ,IAhCR,CAHoH;",
"sources":["node_modules/performance-now/lib/performance-now.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$performance_now$lib$performance_now\"] = function(global,require,module,exports) {\nvar process = require('process');\n// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n\n};"],
"names":["shadow$provide","global","require","module","exports","process","performance","now","module.exports","hrtime","getNanoSeconds","nodeLoadTime","hr","moduleLoadTime","upTime","uptime","Date","loadTime","getTime","call"]
}
